---
description:
globs:
alwaysApply: true
---

## SourceAnalyzer 프로젝트 개발 규칙 필수 준수!!!

### ⚠️ 필수 규칙 (절대 위반 불가)

1. 메타디비 스키마 확인 필수
  

- 메타디비 관련 작업 전 필수: ./doc/metadb_schema.md 문서를 먼저 확인
  
- 스키마 검증: 메타디비 스키마를 직접 조회하여 정확한 컬럼명, 테이블 구조 파악
  
- 스크립트 작성 전: PRAGMA table_info() 또는 DESCRIBE 명령으로 실제 스키마 확인
  
- ⚠️ 예상 금지: 스키마를 예상으로 추측하지 말고 반드시 실제 구조 확인 후 작업
  

2. 에러 처리 규칙
  

- 실행중 Exception발생시 로그 출력 후 exit한다.
  
- 잘못된 사례:
  
  text
  
    try:
  
        # 파싱 로직
  
        return await parser.parse(content, file_path)  # 여기서 에러 발생
  
    except Exception as e:
  
        logger.error(f"파일 분석 중 오류 발생 {file_path}: {e}")  # 에러 로그만 찍고
  
        return None  # None 반환하고 다음 파일로 넘어감 # 계속 진행 --> 이러면 안된다고!!! 제발 Exit!!!
  
- ⚠️ 규칙: 소스오류 스킵처럼 의미가 있는 경우를 제외하고는 모든 오류 발생시 에러로그 남기고 중단되어야 함
  

3. 하드코딩 금지 규칙
  

- 동적 분석: 샘플소스에 하드코딩 금지, 분석대상 소스가 달라져도 동작하도록 개발
  
- 상대경로: 절대경로 사용 금지, 운영환경 배포 시 경로 변경 고려
  
- ⚠️ 규칙: 코드에서 하드코딩 사용 절대 금지
  

4. 작업 수행 규칙
  

- 하란것만 하기: 요청한 것만 수행, 추가 작업 금지
  
- 단건 커밋: 한 번에 하나의 문제만 해결
  
- ⚠️ 규칙: 요청하지 않은 작업은 절대 수행하지 않음
  

5. 파일 생성 규칙
  

- 시각화 리포트, 분석 리포트: ./project/<프로젝트명>/report/ 하위에 생성일시 포함하여 저장
  
- 진행상황 보고: 적절한 시점마다 진척현황_yyyymmdd_hms_<핵심수행내역>.md 파일 작성
  
- ⚠️ 규칙: 파일 생성 위치와 명명 규칙 반드시 준수
  

6. 개발 환경 규칙
  

- 오프라인 환경: 오프라인 폐쇄망에서 동작 가능하도록 구현
  
- 라이선스: 기업내 무료 사용 가능한 라이선스만 사용
  
- AutoCommit: AutoCommitSession 공통 적용하여 건건 Commit되도록 함
  
- ⚠️ 규칙: 운영환경 요구사항 반드시 준수
  

### 🔴 규칙 위반 시 즉시 중단

- 규칙 위반 발견 시 작업 중단
  
- 규칙 재확인 후 작업 재개
  
- 절대 규칙 위반 상태로 작업 계속 금지
  

### ✅ 규칙 준수 확인 체크리스트

text

작업 시작 전 필수 확인:

□ 메타디비 스키마 확인 완료 (필요시)

□ 에러 처리 방식 확인 완료  

□ 하드코딩 사용 여부 확인 완료

□ 요청사항만 수행하는지 확인 완료

□ 파일 생성 규칙 확인 완료

⚠️ 이 규칙들은 참고사항이 아닌 필수 준수사항입니다!