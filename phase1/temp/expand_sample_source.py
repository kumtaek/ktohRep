#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
샘플 소스 확장
Oracle + Spring Boot + MyBatis + DB Schema가 포함된 더 큰 규모의 샘플 생성
"""

import os
import shutil
import requests
import zipfile
from pathlib import Path

def expand_sample_source():
    """샘플 소스 확장"""
    
    print("=== 샘플 소스 확장 ===")
    print("Oracle + Spring Boot + MyBatis + DB Schema 포함")
    
    # 1. 기존 샘플 백업
    backup_existing_sample()
    
    # 2. 새로운 샘플 다운로드 및 구성
    download_and_setup_sample()
    
    # 3. Oracle DB Schema 추가
    add_oracle_schema()
    
    # 4. JSP 샘플 파일 추가
    add_jsp_samples()
    
    # 5. 확장된 샘플 검증
    validate_expanded_sample()

def backup_existing_sample():
    """기존 샘플 백업"""
    
    print("\n=== 기존 샘플 백업 ===")
    
    source_dir = '../project/sampleSrc'
    backup_dir = '../project/sampleSrc_backup'
    
    if os.path.exists(source_dir):
        if os.path.exists(backup_dir):
            shutil.rmtree(backup_dir)
        shutil.copytree(source_dir, backup_dir)
        print(f"✅ 기존 샘플 백업 완료: {backup_dir}")
    else:
        print("⚠️ 기존 샘플이 없습니다.")

def download_and_setup_sample():
    """새로운 샘플 다운로드 및 구성"""
    
    print("\n=== 새로운 샘플 다운로드 ===")
    
    # GitHub에서 Oracle + Spring Boot + MyBatis 샘플 다운로드
    sample_urls = [
        "https://github.com/michalsida/demo-oracle-mybatis/archive/refs/heads/main.zip",
        # 추가 샘플 URL들...
    ]
    
    for url in sample_urls:
        try:
            download_sample(url)
        except Exception as e:
            print(f"❌ 샘플 다운로드 실패: {url} - {e}")

def download_sample(url: str):
    """개별 샘플 다운로드"""
    
    print(f"다운로드 중: {url}")
    
    response = requests.get(url, timeout=30)
    response.raise_for_status()
    
    # 임시 파일로 저장
    temp_file = "./temp/sample.zip"
    with open(temp_file, 'wb') as f:
        f.write(response.content)
    
    # 압축 해제
    extract_dir = "./temp/extracted"
    if os.path.exists(extract_dir):
        shutil.rmtree(extract_dir)
    
    with zipfile.ZipFile(temp_file, 'r') as zip_ref:
        zip_ref.extractall(extract_dir)
    
    # 샘플 소스 복사
    copy_sample_to_project(extract_dir)
    
    # 임시 파일 정리
    os.remove(temp_file)
    shutil.rmtree(extract_dir)

def copy_sample_to_project(extract_dir: str):
    """추출된 샘플을 프로젝트로 복사"""
    
    print("샘플 소스를 프로젝트로 복사 중...")
    
    target_dir = '../project/sampleSrc'
    
    # 기존 샘플 제거
    if os.path.exists(target_dir):
        shutil.rmtree(target_dir)
    
    # 새 샘플 복사
    for root, dirs, files in os.walk(extract_dir):
        for dir_name in dirs:
            if dir_name in ['src', 'resources', 'sql', 'schema']:
                src_path = os.path.join(root, dir_name)
                dst_path = os.path.join(target_dir, dir_name)
                shutil.copytree(src_path, dst_path)
                print(f"✅ 복사 완료: {dir_name}")

def add_oracle_schema():
    """Oracle DB Schema 추가"""
    
    print("\n=== Oracle DB Schema 추가 ===")
    
    schema_dir = '../project/sampleSrc/db_schema'
    os.makedirs(schema_dir, exist_ok=True)
    
    # Oracle DDL 스크립트 생성
    create_oracle_ddl(schema_dir)
    
    # Oracle DML 스크립트 생성
    create_oracle_dml(schema_dir)

def add_jsp_samples():
    """JSP 샘플 파일 추가"""
    
    print("\n=== JSP 샘플 파일 추가 ===")
    
    jsp_dir = '../project/sampleSrc/src/main/webapp'
    os.makedirs(jsp_dir, exist_ok=True)
    
    # JSP 파일들 생성
    create_jsp_files(jsp_dir)

def create_oracle_ddl(schema_dir: str):
    """Oracle DDL 스크립트 생성"""
    
    ddl_content = """
-- Oracle DDL 스크립트
-- 사용자 테이블
CREATE TABLE users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) NOT NULL UNIQUE,
    password VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    phone VARCHAR2(20),
    created_date DATE DEFAULT SYSDATE,
    updated_date DATE DEFAULT SYSDATE,
    status VARCHAR2(10) DEFAULT 'ACTIVE'
);

-- 주문 테이블
CREATE TABLE orders (
    order_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    order_date DATE DEFAULT SYSDATE,
    total_amount NUMBER(10,2) NOT NULL,
    status VARCHAR2(20) DEFAULT 'PENDING',
    shipping_address VARCHAR2(200),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- 상품 테이블
CREATE TABLE products (
    product_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_name VARCHAR2(100) NOT NULL,
    description CLOB,
    price NUMBER(10,2) NOT NULL,
    stock_quantity NUMBER DEFAULT 0,
    category_id NUMBER,
    created_date DATE DEFAULT SYSDATE,
    updated_date DATE DEFAULT SYSDATE
);

-- 주문 상세 테이블
CREATE TABLE order_items (
    order_item_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id NUMBER NOT NULL,
    product_id NUMBER NOT NULL,
    quantity NUMBER NOT NULL,
    unit_price NUMBER(10,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- 카테고리 테이블
CREATE TABLE categories (
    category_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR2(50) NOT NULL,
    description VARCHAR2(200),
    parent_category_id NUMBER,
    FOREIGN KEY (parent_category_id) REFERENCES categories(category_id)
);

-- 인덱스 생성
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_orders_user_id ON orders(user_id);
CREATE INDEX idx_orders_date ON orders(order_date);
CREATE INDEX idx_products_category ON products(category_id);
CREATE INDEX idx_order_items_order ON order_items(order_id);
CREATE INDEX idx_order_items_product ON order_items(product_id);

-- 시퀀스 생성 (필요시)
CREATE SEQUENCE user_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE order_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE product_seq START WITH 1 INCREMENT BY 1;
"""
    
    ddl_file = os.path.join(schema_dir, 'oracle_ddl.sql')
    with open(ddl_file, 'w', encoding='utf-8') as f:
        f.write(ddl_content)
    
    print(f"✅ Oracle DDL 생성: {ddl_file}")

def create_oracle_dml(schema_dir: str):
    """Oracle DML 스크립트 생성"""
    
    dml_content = """
-- Oracle DML 스크립트
-- 카테고리 데이터 삽입
INSERT INTO categories (category_name, description) VALUES ('Electronics', '전자제품');
INSERT INTO categories (category_name, description) VALUES ('Clothing', '의류');
INSERT INTO categories (category_name, description) VALUES ('Books', '도서');
INSERT INTO categories (category_name, description) VALUES ('Home', '홈&가든');

-- 상품 데이터 삽입
INSERT INTO products (product_name, description, price, stock_quantity, category_id) 
VALUES ('스마트폰', '최신 스마트폰', 800000, 100, 1);

INSERT INTO products (product_name, description, price, stock_quantity, category_id) 
VALUES ('노트북', '고성능 노트북', 1500000, 50, 1);

INSERT INTO products (product_name, description, price, stock_quantity, category_id) 
VALUES ('티셔츠', '면 티셔츠', 25000, 200, 2);

INSERT INTO products (product_name, description, price, stock_quantity, category_id) 
VALUES ('자바 프로그래밍', '자바 학습서', 35000, 80, 3);

-- 사용자 데이터 삽입
INSERT INTO users (username, password, email, phone) 
VALUES ('admin', 'admin123', 'admin@example.com', '010-1234-5678');

INSERT INTO users (username, password, email, phone) 
VALUES ('user1', 'user123', 'user1@example.com', '010-2345-6789');

INSERT INTO users (username, password, email, phone) 
VALUES ('user2', 'user123', 'user2@example.com', '010-3456-7890');

-- 주문 데이터 삽입
INSERT INTO orders (user_id, total_amount, shipping_address) 
VALUES (1, 800000, '서울시 강남구');

INSERT INTO orders (user_id, total_amount, shipping_address) 
VALUES (2, 1500000, '서울시 서초구');

-- 주문 상세 데이터 삽입
INSERT INTO order_items (order_id, product_id, quantity, unit_price) 
VALUES (1, 1, 1, 800000);

INSERT INTO order_items (order_id, product_id, quantity, unit_price) 
VALUES (2, 2, 1, 1500000);

COMMIT;
"""
    
    dml_file = os.path.join(schema_dir, 'oracle_dml.sql')
    with open(dml_file, 'w', encoding='utf-8') as f:
        f.write(dml_content)
    
    print(f"✅ Oracle DML 생성: {dml_file}")

def create_jsp_files(jsp_dir: str):
    """JSP 파일들 생성"""
    
    # 메인 페이지 JSP
    main_jsp = """<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>메인 페이지</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { background-color: #f0f0f0; padding: 10px; margin-bottom: 20px; }
        .menu { margin: 10px 0; }
        .menu a { margin-right: 20px; text-decoration: none; color: #333; }
        .content { margin: 20px 0; }
    </style>
</head>
<body>
    <div class="header">
        <h1>Oracle + Spring + MyBatis + JSP 샘플</h1>
    </div>
    
    <div class="menu">
        <a href="userList.jsp">사용자 목록</a>
        <a href="productList.jsp">상품 목록</a>
        <a href="orderList.jsp">주문 목록</a>
        <a href="userForm.jsp">사용자 등록</a>
    </div>
    
    <div class="content">
        <h2>시스템 정보</h2>
        <p>현재 시간: <fmt:formatDate value="<%=new java.util.Date()%>" pattern="yyyy-MM-dd HH:mm:ss"/></p>
        <p>서버 정보: <%=application.getServerInfo()%></p>
    </div>
</body>
</html>"""
    
    main_file = os.path.join(jsp_dir, 'index.jsp')
    with open(main_file, 'w', encoding='utf-8') as f:
        f.write(main_jsp)
    
    # 사용자 목록 JSP
    user_list_jsp = """<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>사용자 목록</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { border-collapse: collapse; width: 100%; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        .btn { padding: 5px 10px; margin: 2px; text-decoration: none; background-color: #007bff; color: white; border-radius: 3px; }
    </style>
</head>
<body>
    <h1>사용자 목록</h1>
    
    <div style="margin-bottom: 20px;">
        <a href="userForm.jsp" class="btn">새 사용자 등록</a>
        <a href="index.jsp" class="btn">메인으로</a>
    </div>
    
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>사용자명</th>
                <th>이메일</th>
                <th>전화번호</th>
                <th>등록일</th>
                <th>상태</th>
                <th>작업</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="user" items="${userList}">
                <tr>
                    <td>${user.userId}</td>
                    <td>${user.username}</td>
                    <td>${user.email}</td>
                    <td>${user.phone}</td>
                    <td><fmt:formatDate value="${user.createdDate}" pattern="yyyy-MM-dd"/></td>
                    <td>${user.status}</td>
                    <td>
                        <a href="userEdit.jsp?id=${user.userId}" class="btn">수정</a>
                        <a href="userDelete.jsp?id=${user.userId}" class="btn" onclick="return confirm('삭제하시겠습니까?')">삭제</a>
                    </td>
                </tr>
            </c:forEach>
        </tbody>
    </table>
    
    <c:if test="${empty userList}">
        <p>등록된 사용자가 없습니다.</p>
    </c:if>
</body>
</html>"""
    
    user_list_file = os.path.join(jsp_dir, 'userList.jsp')
    with open(user_list_file, 'w', encoding='utf-8') as f:
        f.write(user_list_jsp)
    
    # 사용자 등록 폼 JSP
    user_form_jsp = """<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>사용자 등록</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .form-group { margin-bottom: 15px; }
        label { display: block; margin-bottom: 5px; font-weight: bold; }
        input[type="text"], input[type="email"], input[type="password"] { 
            width: 300px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; 
        }
        .btn { padding: 10px 20px; margin: 5px; text-decoration: none; background-color: #007bff; color: white; border-radius: 3px; border: none; cursor: pointer; }
        .btn-secondary { background-color: #6c757d; }
    </style>
</head>
<body>
    <h1>사용자 등록</h1>
    
    <form action="userSave.jsp" method="post">
        <div class="form-group">
            <label for="username">사용자명:</label>
            <input type="text" id="username" name="username" required>
        </div>
        
        <div class="form-group">
            <label for="password">비밀번호:</label>
            <input type="password" id="password" name="password" required>
        </div>
        
        <div class="form-group">
            <label for="email">이메일:</label>
            <input type="email" id="email" name="email" required>
        </div>
        
        <div class="form-group">
            <label for="phone">전화번호:</label>
            <input type="text" id="phone" name="phone">
        </div>
        
        <div class="form-group">
            <button type="submit" class="btn">등록</button>
            <a href="userList.jsp" class="btn btn-secondary">취소</a>
        </div>
    </form>
    
    <c:if test="${not empty errorMessage}">
        <div style="color: red; margin-top: 20px;">
            <p>오류: ${errorMessage}</p>
        </div>
    </c:if>
</body>
</html>"""
    
    user_form_file = os.path.join(jsp_dir, 'userForm.jsp')
    with open(user_form_file, 'w', encoding='utf-8') as f:
        f.write(user_form_jsp)
    
    # 상품 목록 JSP
    product_list_jsp = """<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>상품 목록</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { border-collapse: collapse; width: 100%; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        .btn { padding: 5px 10px; margin: 2px; text-decoration: none; background-color: #007bff; color: white; border-radius: 3px; }
        .price { text-align: right; }
    </style>
</head>
<body>
    <h1>상품 목록</h1>
    
    <div style="margin-bottom: 20px;">
        <a href="productForm.jsp" class="btn">새 상품 등록</a>
        <a href="index.jsp" class="btn">메인으로</a>
    </div>
    
    <table>
        <thead>
            <tr>
                <th>상품ID</th>
                <th>상품명</th>
                <th>설명</th>
                <th>가격</th>
                <th>재고수량</th>
                <th>카테고리</th>
                <th>등록일</th>
                <th>작업</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="product" items="${productList}">
                <tr>
                    <td>${product.productId}</td>
                    <td>${product.productName}</td>
                    <td>${product.description}</td>
                    <td class="price"><fmt:formatNumber value="${product.price}" type="currency" currencySymbol="₩"/></td>
                    <td>${product.stockQuantity}</td>
                    <td>${product.categoryName}</td>
                    <td><fmt:formatDate value="${product.createdDate}" pattern="yyyy-MM-dd"/></td>
                    <td>
                        <a href="productEdit.jsp?id=${product.productId}" class="btn">수정</a>
                        <a href="productDelete.jsp?id=${product.productId}" class="btn" onclick="return confirm('삭제하시겠습니까?')">삭제</a>
                    </td>
                </tr>
            </c:forEach>
        </tbody>
    </table>
    
    <c:if test="${empty productList}">
        <p>등록된 상품이 없습니다.</p>
    </c:if>
</body>
</html>"""
    
    product_list_file = os.path.join(jsp_dir, 'productList.jsp')
    with open(product_list_file, 'w', encoding='utf-8') as f:
        f.write(product_list_jsp)
    
    # 주문 목록 JSP
    order_list_jsp = """<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>주문 목록</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { border-collapse: collapse; width: 100%; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        .btn { padding: 5px 10px; margin: 2px; text-decoration: none; background-color: #007bff; color: white; border-radius: 3px; }
        .price { text-align: right; }
    </style>
</head>
<body>
    <h1>주문 목록</h1>
    
    <div style="margin-bottom: 20px;">
        <a href="orderForm.jsp" class="btn">새 주문 등록</a>
        <a href="index.jsp" class="btn">메인으로</a>
    </div>
    
    <table>
        <thead>
            <tr>
                <th>주문ID</th>
                <th>사용자명</th>
                <th>주문일</th>
                <th>총금액</th>
                <th>상태</th>
                <th>배송지</th>
                <th>작업</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="order" items="${orderList}">
                <tr>
                    <td>${order.orderId}</td>
                    <td>${order.username}</td>
                    <td><fmt:formatDate value="${order.orderDate}" pattern="yyyy-MM-dd"/></td>
                    <td class="price"><fmt:formatNumber value="${order.totalAmount}" type="currency" currencySymbol="₩"/></td>
                    <td>${order.status}</td>
                    <td>${order.shippingAddress}</td>
                    <td>
                        <a href="orderDetail.jsp?id=${order.orderId}" class="btn">상세</a>
                        <a href="orderEdit.jsp?id=${order.orderId}" class="btn">수정</a>
                        <a href="orderDelete.jsp?id=${order.orderId}" class="btn" onclick="return confirm('삭제하시겠습니까?')">삭제</a>
                    </td>
                </tr>
            </c:forEach>
        </tbody>
    </table>
    
    <c:if test="${empty orderList}">
        <p>등록된 주문이 없습니다.</p>
    </c:if>
</body>
</html>"""
    
    order_list_file = os.path.join(jsp_dir, 'orderList.jsp')
    with open(order_list_file, 'w', encoding='utf-8') as f:
        f.write(order_list_jsp)
    
    print(f"✅ JSP 파일들 생성 완료:")
    print(f"  - {main_file}")
    print(f"  - {user_list_file}")
    print(f"  - {user_form_file}")
    print(f"  - {product_list_file}")
    print(f"  - {order_list_file}")

def validate_expanded_sample():
    """확장된 샘플 검증"""
    
    print("\n=== 확장된 샘플 검증 ===")
    
    sample_dir = '../project/sampleSrc'
    
    if not os.path.exists(sample_dir):
        print("❌ 샘플 디렉토리가 없습니다.")
        return
    
    # 파일 수 확인
    java_files = []
    xml_files = []
    sql_files = []
    jsp_files = []
    
    for root, dirs, files in os.walk(sample_dir):
        for file in files:
            if file.endswith('.java'):
                java_files.append(os.path.join(root, file))
            elif file.endswith('.xml'):
                xml_files.append(os.path.join(root, file))
            elif file.endswith('.sql'):
                sql_files.append(os.path.join(root, file))
            elif file.endswith('.jsp'):
                jsp_files.append(os.path.join(root, file))
    
    print(f"확장된 샘플 통계:")
    print(f"  Java 파일: {len(java_files)}개")
    print(f"  XML 파일: {len(xml_files)}개")
    print(f"  SQL 파일: {len(sql_files)}개")
    print(f"  JSP 파일: {len(jsp_files)}개")
    print(f"  총 파일: {len(java_files) + len(xml_files) + len(sql_files) + len(jsp_files)}개")
    
    if len(java_files) > 50 and len(xml_files) > 10 and len(sql_files) > 5 and len(jsp_files) > 5:
        print("✅ 샘플 확장 성공! (Oracle + Java + Spring + MyBatis + JSP + DB Schema)")
    else:
        print("⚠️ 샘플이 충분히 확장되지 않았습니다.")

if __name__ == "__main__":
    expand_sample_source()
