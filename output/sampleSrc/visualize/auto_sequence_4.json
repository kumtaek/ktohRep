{
  "type": "sequence",
  "title": "Artificial Flow: OrderService",
  "participants": [
    {
      "id": "method:42",
      "type": "method",
      "label": "OrderService.calculateOrderTotal()",
      "actor_type": "control",
      "order": 0,
      "details": {
        "name": "calculateOrderTotal",
        "class": "com.example.service.OrderService",
        "signature": "calculateOrderTotal(String orderId, BigDecimal discountRate)",
        "artificial": true
      }
    },
    {
      "id": "method:43",
      "type": "method",
      "label": "OrderService.getOrdersByStatus()",
      "actor_type": "control",
      "order": 1,
      "details": {
        "name": "getOrdersByStatus",
        "class": "com.example.service.OrderService",
        "signature": "getOrdersByStatus(String status)",
        "artificial": true
      }
    },
    {
      "id": "method:44",
      "type": "method",
      "label": "OrderService.generateOrderReport()",
      "actor_type": "control",
      "order": 2,
      "details": {
        "name": "generateOrderReport",
        "class": "com.example.service.OrderService",
        "signature": "generateOrderReport(String startDate, String endDate)",
        "artificial": true
      }
    },
    {
      "id": "method:45",
      "type": "method",
      "label": "OrderService.largeOrderMethod1()",
      "actor_type": "control",
      "order": 3,
      "details": {
        "name": "largeOrderMethod1",
        "class": "com.example.service.OrderService",
        "signature": "largeOrderMethod1()",
        "artificial": true
      }
    },
    {
      "id": "method:46",
      "type": "method",
      "label": "OrderService.largeOrderMethod2()",
      "actor_type": "control",
      "order": 4,
      "details": {
        "name": "largeOrderMethod2",
        "class": "com.example.service.OrderService",
        "signature": "largeOrderMethod2()",
        "artificial": true
      }
    },
    {
      "id": "method:47",
      "type": "method",
      "label": "OrderService.largeOrderMethod3()",
      "actor_type": "control",
      "order": 5,
      "details": {
        "name": "largeOrderMethod3",
        "class": "com.example.service.OrderService",
        "signature": "largeOrderMethod3()",
        "artificial": true
      }
    }
  ],
  "interactions": [
    {
      "id": "interaction_0",
      "sequence_order": 0,
      "type": "synchronous",
      "from_participant": "method:42",
      "to_participant": "method:43",
      "message": "calls getOrdersByStatus()",
      "confidence": 0.3,
      "artificial": true
    },
    {
      "id": "interaction_1",
      "sequence_order": 1,
      "type": "synchronous",
      "from_participant": "method:43",
      "to_participant": "method:44",
      "message": "calls generateOrderReport()",
      "confidence": 0.3,
      "artificial": true
    },
    {
      "id": "interaction_2",
      "sequence_order": 2,
      "type": "synchronous",
      "from_participant": "method:44",
      "to_participant": "method:45",
      "message": "calls largeOrderMethod1()",
      "confidence": 0.3,
      "artificial": true
    },
    {
      "id": "interaction_3",
      "sequence_order": 3,
      "type": "synchronous",
      "from_participant": "method:45",
      "to_participant": "method:46",
      "message": "calls largeOrderMethod2()",
      "confidence": 0.3,
      "artificial": true
    },
    {
      "id": "interaction_4",
      "sequence_order": 4,
      "type": "synchronous",
      "from_participant": "method:46",
      "to_participant": "method:47",
      "message": "calls largeOrderMethod3()",
      "confidence": 0.3,
      "artificial": true
    }
  ],
  "entry_point": {
    "id": 42,
    "name": "OrderService.calculateOrderTotal",
    "full_name": "com.example.service.OrderService.calculateOrderTotal",
    "category": "artificial",
    "artificial": true
  },
  "metadata": {
    "total_participants": 6,
    "total_interactions": 5,
    "max_depth_reached": 1,
    "unresolved_calls": 0,
    "artificial": true,
    "note": "This diagram shows artificial sequential flow due to missing call relationships"
  }
}