<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.UserMapper">
    
    <!-- 공통 SQL 조각 정의 -->
    <sql id="userBaseColumns">
        user_id, user_name, email, phone, status, 
        created_date, updated_date, del_yn
    </sql>
    
    <sql id="userBaseCondition">
        WHERE del_yn = 'N'
    </sql>
    
    <!-- 
        @QueryName: selectUserById
        @TableName: USERS
        @ColumnName: user_id, user_name, email, phone, status
        @Description: 사용자 ID로 단일 사용자 정보를 조회합니다.
                     DEL_YN = 'N' 조건을 포함하여 삭제되지 않은 사용자만 조회합니다.
    -->
    <select id="selectUserById" parameterType="String" resultType="UserVO">
        SELECT 
            <include refid="userBaseColumns"/>
        FROM users
        <include refid="userBaseCondition"/>
        AND user_id = #{userId}
    </select>
    
    <select id="selectActiveUsers" resultType="UserVO">
        SELECT 
            <include refid="userBaseColumns"/>
        FROM users
        <include refid="userBaseCondition"/>
        AND status = 'ACTIVE'
        ORDER BY created_date DESC
    </select>
    
    <!-- MyBatis <bind> 구문 사용 예제 -->
    <select id="searchUsersByCondition" parameterType="Map" resultType="UserVO">
        <bind name="searchPattern" value="'%' + searchKeyword + '%'"/>
        <bind name="statusFilter" value="status != null ? status : 'ACTIVE'"/>
        
        SELECT 
            <include refid="userBaseColumns"/>
        FROM users
        <include refid="userBaseCondition"/>
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (user_name LIKE #{searchPattern} 
                 OR email LIKE #{searchPattern})
        </if>
        <if test="status != null and status != ''">
            AND status = #{statusFilter}
        </if>
        ORDER BY user_name
    </select>
    
    <!-- 동적 SQL - 복잡한 조건문 -->
    <select id="findUsersWithDynamicConditions" parameterType="Map" resultType="UserVO">
        SELECT 
            <include refid="userBaseColumns"/>
        FROM users
        <where>
            <include refid="userBaseCondition"/>
            <choose>
                <when test="searchType == 'name'">
                    AND user_name LIKE '%' || #{searchValue} || '%'
                </when>
                <when test="searchType == 'email'">
                    AND email LIKE '%' || #{searchValue} || '%'
                </when>
                <otherwise>
                    AND (user_name LIKE '%' || #{searchValue} || '%' 
                         OR email LIKE '%' || #{searchValue} || '%')
                </otherwise>
            </choose>
            
            <if test="statusList != null and statusList.size() > 0">
                AND status IN
                <foreach item="status" collection="statusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            
            <if test="fromDate != null">
                AND created_date >= #{fromDate}
            </if>
            <if test="toDate != null">
                AND created_date &lt;= #{toDate}
            </if>
        </where>
        ORDER BY created_date DESC
    </select>
    
    <insert id="insertUser" parameterType="UserVO">
        INSERT INTO users (
            user_id, user_name, email, phone, status, 
            created_date, del_yn
        ) VALUES (
            #{userId}, #{userName}, #{email}, #{phone}, #{status},
            SYSDATE, 'N'
        )
    </insert>
    
    <!-- 동적 SQL 실행을 위한 쿼리 -->
    <select id="executeDynamicQuery" parameterType="String" resultType="Map">
        ${sql}
    </select>
    
</mapper>