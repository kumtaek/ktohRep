<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.BrokenMapper">
    
    <!-- 정상적인 MyBatis 매퍼 - 오류 수정됨 -->
    
    <!-- 정상적인 쿼리 -->
    <select id="selectAll" resultType="com.example.model.Product">
        SELECT id, name, price, description, create_date
        FROM products
        ORDER BY create_date DESC
    </select>
    
    <!-- 정상적인 쿼리 -->
    <select id="selectByCategory" resultType="com.example.model.Product">
        SELECT id, name, price, description, create_date
        FROM products
        WHERE category = #{category}
        ORDER BY name
    </select>
    
    <!-- 정상적인 쿼리 -->
    <select id="selectWithCorrectColumns" resultType="com.example.model.Product">
        SELECT id, name, price, description, create_date
        FROM products
        WHERE id = #{id}
    </select>
    
    <!-- 정상적인 복잡한 쿼리 -->
    <select id="selectComplex" resultType="com.example.model.Product">
        SELECT id, name, price, description, create_date
        FROM products
        WHERE (category = #{category} AND price > #{minPrice})
        AND status = 'ACTIVE'
        ORDER BY price ASC
    </select>
    
    <!-- 정상적인 동적 SQL -->
    <select id="selectDynamic" resultType="com.example.model.Product">
        SELECT id, name, price, description, create_date
        FROM products
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
            <if test="minPrice != null">
                AND price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND price <= #{maxPrice}
            </if>
        </where>
        ORDER BY create_date DESC
    </select>
    
    <!-- 정상적인 resultMap 정의 -->
    <resultMap id="productResultMap" type="com.example.model.Product">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="price" column="price"/>
        <result property="description" column="description"/>
        <result property="createDate" column="create_date"/>
    </resultMap>
    
    <!-- 정상적인 resultMap 사용 -->
    <select id="selectWithResultMap" resultMap="productResultMap">
        SELECT id, name, price, description, create_date
        FROM products
        WHERE id = #{id}
    </select>
    
    <!-- 정상적인 INSERT 쿼리 -->
    <insert id="insert" parameterType="com.example.model.Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO products (name, price, description, create_date)
        VALUES (#{name}, #{price}, #{description}, #{createDate})
    </insert>
    
    <!-- 정상적인 UPDATE 쿼리 -->
    <update id="update" parameterType="com.example.model.Product">
        UPDATE products
        SET name = #{name},
            price = #{price},
            description = #{description}
        WHERE id = #{id}
    </update>
    
    <!-- 정상적인 DELETE 쿼리 -->
    <delete id="delete">
        DELETE FROM products WHERE id = #{id}
    </delete>
    
</mapper>
